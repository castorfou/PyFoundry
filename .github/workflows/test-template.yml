name: Test Template

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

jobs:
  test-template:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --extra test

    - name: Run template generation tests
      run: |
        uv run pytest tests/ -v --cov=. --cov-report=term-missing

    - name: Test generated project validity
      run: |
        # Generate a test project
        uv run cruft create . --no-input --output-dir /tmp/test-projects
        
        cd /tmp/test-projects/mon-projet-data-science
        
        # Verify project structure
        ls -la
        
        # Test that the generated project can be installed
        uv sync
        
        # Test that ruff configuration is valid
        uv run ruff check . --show-source || true
        
        # Test that mypy configuration is valid  
        uv run mypy --show-error-codes src/ || true
        
        # Test that pre-commit config is valid
        uv run pre-commit run --all-files --show-diff-on-failure || true

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: false